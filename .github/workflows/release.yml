name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏷️ Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: 📝 Generate changelog
        id: changelog
        run: |
          echo "## What's Changed" > changelog.txt
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> changelog.txt

      - name: 🚀 Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: TrueCircle v${{ steps.version.outputs.version }}
          body_path: changelog.txt
          draft: false
          prerelease: false

  build-android-release:
    name: 🤖 Build Android Release
    runs-on: ubuntu-latest
    needs: create-release
    timeout-minutes: 40
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🏗️ Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: 🤖 Build APK
        run: flutter build apk --release

      - name: 📦 Build App Bundle
        run: flutter build appbundle --release

      - name: 📤 Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: truecircle-v${{ needs.create-release.outputs.version }}-android.apk
          asset_content_type: application/vnd.android.package-archive

      - name: 📤 Upload App Bundle to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: build/app/outputs/bundle/release/app-release.aab
          asset_name: truecircle-v${{ needs.create-release.outputs.version }}-android.aab
          asset_content_type: application/octet-stream

  build-web-release:
    name: 🌐 Build Web Release
    runs-on: ubuntu-latest
    needs: create-release
    timeout-minutes: 30
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🏗️ Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: 🌐 Build Web
        run: flutter build web --release

      - name: 📦 Create Web Archive
        run: |
          cd build/web
          tar -czf ../../truecircle-v${{ needs.create-release.outputs.version }}-web.tar.gz .
          cd ../..

      - name: 📤 Upload Web Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: truecircle-v${{ needs.create-release.outputs.version }}-web.tar.gz
          asset_name: truecircle-v${{ needs.create-release.outputs.version }}-web.tar.gz
          asset_content_type: application/gzip

  build-windows-release:
    name: 🖥️ Build Windows Release
    runs-on: windows-latest
    needs: create-release
    timeout-minutes: 40
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🏗️ Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: 🖥️ Build Windows
        run: flutter build windows --release

      - name: 📦 Create Windows Archive
        run: |
          Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath truecircle-v${{ needs.create-release.outputs.version }}-windows.zip

      - name: 📤 Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: truecircle-v${{ needs.create-release.outputs.version }}-windows.zip
          asset_name: truecircle-v${{ needs.create-release.outputs.version }}-windows.zip
          asset_content_type: application/zip

  notify:
    name: 📢 Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, build-android-release, build-web-release, build-windows-release]
    if: always()
    steps:
      - name: 📊 Release Summary
        run: |
          echo "## 🎉 Release v${{ needs.create-release.outputs.version }} Created!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Status:" >> $GITHUB_STEP_SUMMARY
          echo "- 🤖 Android: ${{ needs.build-android-release.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Web: ${{ needs.build-web-release.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🖥️ Windows: ${{ needs.build-windows-release.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release is ready for distribution! 🚀**" >> $GITHUB_STEP_SUMMARY
