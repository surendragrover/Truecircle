import 'package:flutter/material.dart';
import '../home/home_page.dart';
// Simplified: keep TC module self-contained with no cross-package imports
// import '../services/cloud_sync_service.dart';
// import '../services/loyalty_points_service.dart';

/// How TrueCircle Works - Comprehensive Guide Page
class HowTrueCircleWorksPage extends StatefulWidget {
  const HowTrueCircleWorksPage({super.key});

  @override
  State<HowTrueCircleWorksPage> createState() => _HowTrueCircleWorksPageState();
}

class _HowTrueCircleWorksPageState extends State<HowTrueCircleWorksPage>
    with TickerProviderStateMixin {
  late TabController _tabController;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 5, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('How TrueCircle Works'),
        elevation: 0,
        bottom: TabBar(
          controller: _tabController,
          isScrollable: true,
          tabs: [
            const Tab(text: 'Overview'),
            const Tab(text: 'Features'),
            const Tab(text: 'Privacy'),
            const Tab(text: 'AI Technology'),
            const Tab(text: 'Getting Started'),
          ],
        ),
      ),
      body: Container(
        color: Theme.of(context).colorScheme.surface,
        child: TabBarView(
          controller: _tabController,
          children: [
            _buildOverviewTab(),
            _buildFeaturesTab(),
            _buildPrivacyTab(),
            _buildAITechnologyTab(),
            _buildGettingStartedTab(),
          ],
        ),
      ),
      // Bottom navigation omitted in module variant
    );
  }

  Widget _buildOverviewTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _buildSectionCard(
            title: 'üåü What is TrueCircle?',
            content:
                '''TrueCircle is a revolutionary emotional AI app that helps you understand your relationships and mental health. It's a privacy‚Äëfirst app that provides AI‚Äëpowered insights with cultural context.

‚ú® Key Highlights:
‚Ä¢ 100% Privacy Protected - Your data stays on your device
‚Ä¢ Cultural AI - Understands festivals and traditions
‚Ä¢ Zero Permissions - No device permissions required
‚Ä¢ Real-time Analysis - Instant emotional insights''',
          ),
          const SizedBox(height: 16),
          // Color scheme preview (main app page) omitted in TC module
          const SizedBox(height: 8),
          _buildSectionCard(
            title: 'üéØ Our mission',
            content:
                '''TrueCircle's mission is to empower people with emotional intelligence and healthy relationships ‚Äî without compromising privacy.

üåç Vision:
"Make emotional wellness accessible while respecting privacy and cultural values"

üí° Values:
‚Ä¢ Privacy First - Your information belongs only to you
‚Ä¢ Cultural Sensitivity - Respect for cultural context
‚Ä¢ Accessibility - Available for everyone
‚Ä¢ Innovation - Utilize modern AI responsibly''',
          ),
          const SizedBox(height: 16),
          _buildSectionCard(
            title: 'üöÄ Impact of TrueCircle',
            content:
                '''TrueCircle is not just an app ‚Äî it's a movement for emotional wellness. People report significant improvements in their relationships.

üìä Examples:
‚Ä¢ Better understanding of relationship patterns
‚Ä¢ Increased emotional awareness
‚Ä¢ Improved celebration experiences
‚Ä¢ Strong privacy satisfaction

üéâ Stories:
"TrueCircle helped me strengthen emotional connections during festivals."
"I understood my relationship patterns and developed better communication skills."''',
          ),
        ],
      ),
    );
  }

  Widget _buildFeaturesTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _buildFeatureCard(
            icon: 'üß†',
            title: 'Emotional Check-in',
            subtitle: 'Daily Emotional Assessment',
            description:
                '''Track your emotions daily and understand patterns. AI analyzes your mood changes and provides personalized insights.

‚ú® Features:
‚Ä¢ Daily emotion logging
‚Ä¢ Mood pattern analysis
‚Ä¢ Emotional triggers identification
‚Ä¢ Personalized recommendations
‚Ä¢ Rich emotion vocabulary''',
          ),
          _buildFeatureCard(
            icon: 'üíï',
            title: 'Relationship Insights',
            subtitle: 'Deep Relationship Analysis',
            description:
                '''Comprehensive analysis of all your relationships. Understand which relationships are healthy and where improvement is needed.

üîç Analysis Includes:
‚Ä¢ Communication patterns
‚Ä¢ Emotional compatibility
‚Ä¢ Relationship strengths & weaknesses
‚Ä¢ Cultural context consideration
‚Ä¢ Festival bonding opportunities''',
          ),
          _buildFeatureCard(
            icon: 'üé≠',
            title: 'Cultural AI Dashboard',
            subtitle: 'Festival Intelligence',
            description:
                '''Understand relationships in the context of festivals. AI suggests how to strengthen emotional connections during celebrations.

üéâ Cultural Features:
‚Ä¢ Festival-specific relationship tips
‚Ä¢ Regional celebration insights
‚Ä¢ Family bonding suggestions
‚Ä¢ Gift-giving recommendations
‚Ä¢ Traditional value integration''',
          ),
          _buildFeatureCard(
            icon: 'üë©‚Äç‚öïÔ∏è',
            title: 'Dr. Iris AI Counselor',
            subtitle: 'Personal AI Advisor',
            description:
                '''24/7 available AI counselor that understands your emotional and relationship problems. Advice is grounded in well-known therapy techniques.

ü©∫ Counseling Features:
‚Ä¢ Real-time emotional support
‚Ä¢ Relationship problem solving
‚Ä¢ Stress management techniques
‚Ä¢ Cultural sensitivity
‚Ä¢ Privacy-protected conversations''',
          ),
          _buildFeatureCard(
            icon: 'üìä',
            title: 'Wellness Tracking',
            subtitle: 'Comprehensive Health Tracking',
            description:
                '''Track your mental, emotional, and physical wellness. Sleep, mood, breathing exercises ‚Äî everything in one place.

üìà Tracking Includes:
‚Ä¢ Mood Journal (30-day data)
‚Ä¢ Sleep Quality Analysis
‚Ä¢ Breathing Exercise Progress
‚Ä¢ Meditation Tracking
‚Ä¢ Stress Level Monitoring''',
          ),
          const SizedBox(height: 24),
          // Detailed features list button omitted (main app page)
        ],
      ),
    );
  }

  Widget _buildPrivacyTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _buildSectionCard(
            title: 'üîí Privacy-First Approach',
            content:
                '''At TrueCircle, your privacy is our top priority. The app is designed so your sensitive data never leaves your device.

üõ°Ô∏è Privacy Features:
‚Ä¢ Zero Data Collection ‚Äì We don't collect personal data
‚Ä¢ On-Device Processing ‚Äì All AI runs locally
‚Ä¢ No Server Storage ‚Äì Nothing stored in the cloud
‚Ä¢ No Dangerous Permissions ‚Äì Works in a privacy-first offline mode
‚Ä¢ Transparent by Design ‚Äì Clear, simple controls''',
          ),
          // Note: Permission settings UI removed per privacy-first design.
          const SizedBox(height: 16),
          _buildSectionCard(
            title: 'üîê Data Security Architecture',
            content:
                '''TrueCircle uses multiple layers of security to keep your data safe.

üèóÔ∏è Security Layers:
1. Local Encryption ‚Äì Data encrypted on device
2. Hive Database ‚Äì Secure local storage
3. Memory Protection ‚Äì Careful in-memory handling
4. Network Isolation ‚Äì Works offline by default
5. Code Hardening ‚Äì Release builds are obfuscated

üéØ Privacy Benefits:
‚Ä¢ No corporate data mining
‚Ä¢ No targeted advertising
‚Ä¢ Complete user control
‚Ä¢ Privacy by design''',
          ),
          const SizedBox(height: 16),
          _buildSectionCard(
            title: '‚úÖ Privacy Guarantee',
            content: '''We guarantee that TrueCircle protects your privacy.

üìù Our Commitments:
‚Ä¢ We never share your data
‚Ä¢ No third‚Äëparty trackers
‚Ä¢ No advertising identifiers
‚Ä¢ Transparent, offline-by-default experience''',
          ),
        ],
      ),
    );
  }

  Widget _buildAITechnologyTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _buildSectionCard(
            title: 'ü§ñ Advanced AI Technology',
            content:
                '''TrueCircle uses modern, privacy-friendly AI designed to respect cultural context while running fully on-device.

üß† AI Capabilities:
‚Ä¢ Natural Language Processing
‚Ä¢ Emotion Recognition (50+ categories)
‚Ä¢ Pattern Analysis for relationships
‚Ä¢ Predictive insights
‚Ä¢ Cultural context awareness''',
          ),
          const SizedBox(height: 16),
          _buildSectionCard(
            title: 'üéØ Cultural AI Innovation',
            content:
                '''Our Cultural AI goes beyond generic models and is tuned to understand celebrations, family dynamics, and tradition‚Äëinformed contexts.

üåü Highlights:
‚Ä¢ Festival emotional patterns
‚Ä¢ Family dynamics
‚Ä¢ Regional celebration insights
‚Ä¢ Balance of traditional values in modern life''',
          ),
          const SizedBox(height: 16),
          _buildSectionCard(
            title: '‚ö° On-Device AI Processing',
            content:
                '''All AI processing happens on your device. After installation, platform‚Äëspecific models are available offline.

üíª Advantages:
‚Ä¢ Real‚Äëtime processing
‚Ä¢ Fully offline functionality
‚Ä¢ Battery‚Äëoptimized
‚Ä¢ Privacy protected
‚Ä¢ Platform‚Äëoptimized''',
          ),
        ],
      ),
    );
  }

  Widget _buildGettingStartedTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _buildSectionCard(
            title: 'üöÄ Getting Started with TrueCircle',
            content:
                '''TrueCircle is simple to use. After installation, the app is ready in its privacy-first offline mode and works fully offline.

üì± Quick Start:
1. Install the app
2. Launch in Offline Mode (no permissions)
3. Set basic preferences
4. Do your first Emotional Check‚Äëin

‚è±Ô∏è Typical Time:
‚Ä¢ Initial setup: ~30 seconds
‚Ä¢ First check‚Äëin: ~30 seconds''',
          ),
          const SizedBox(height: 16),
          _buildSectionCard(
            title: 'üí° Best Practices',
            content: '''Tips to get the most from TrueCircle:

üìÖ Daily Usage:
‚Ä¢ Do a quick Emotional Check‚Äëin (30 seconds)
‚Ä¢ Weekly relationship review
‚Ä¢ Track sleep and mood patterns

üéØ Pro Tips:
‚Ä¢ Morning check‚Äëins provide clarity
‚Ä¢ Chat with Dr. Iris weekly
‚Ä¢ Practice breathing exercises

üìä Progress Tracking:
‚Ä¢ Check weekly analytics
‚Ä¢ Review monthly insights
‚Ä¢ Set goals and monitor progress''',
          ),
          const SizedBox(height: 16),
          _buildSectionCard(
            title: 'üÜò Support & Help',
            content:
                '''If you need any help or have questions, we're here for you:

üìû Support Channels:
‚Ä¢ In‚ÄëApp Help ‚Äì Complete guide inside the app
‚Ä¢ Dr. Iris Chat ‚Äì Ask the AI counselor
‚Ä¢ FAQ Section ‚Äì Answers to common questions
‚Ä¢ Video Tutorials ‚Äì Step‚Äëby‚Äëstep guidance
‚Ä¢ Community Forum ‚Äì Connect with other users

üïê Response Time:
‚Ä¢ In‚ÄëApp Help: Instant
‚Ä¢ Dr. Iris: Real‚Äëtime 24/7
‚Ä¢ Technical Issues: Resolved within 24 hours
‚Ä¢ Feature Requests: Considered in next update

üåü Community:
Join the TrueCircle community and share experiences with other users. Get valuable insights while maintaining privacy.''',
          ),
          const SizedBox(height: 24),
          // FAQ button omitted (main app page)
          const SizedBox(height: 16),
          Center(
            child: ElevatedButton.icon(
              onPressed: () {
                Navigator.of(context).pushReplacement(
                  MaterialPageRoute(builder: (_) => const HomePage()),
                );
              },
              icon: const Icon(Icons.rocket_launch),
              label: const Text(
                'TrueCircle ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
                style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
              ),
              style: ElevatedButton.styleFrom(
                padding: const EdgeInsets.symmetric(
                  horizontal: 32,
                  vertical: 16,
                ),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(25),
                ),
                elevation: 8,
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildSectionCard({required String title, required String content}) {
    return Card(
      elevation: 8,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      child: Container(
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(16),
          gradient: LinearGradient(
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
            colors: [
              Theme.of(context).colorScheme.surface,
              Theme.of(context).colorScheme.surfaceContainerHighest,
            ],
          ),
        ),
        padding: const EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              title,
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
                color: Theme.of(context).colorScheme.primary,
              ),
            ),
            const SizedBox(height: 12),
            Text(
              content,
              style: TextStyle(
                fontSize: 16,
                height: 1.5,
                color: Theme.of(context).colorScheme.onSurface,
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildFeatureCard({
    required String icon,
    required String title,
    required String subtitle,
    required String description,
  }) {
    return Card(
      elevation: 6,
      margin: const EdgeInsets.only(bottom: 16),
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      child: Container(
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(16),
          gradient: LinearGradient(
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
            colors: [
              Theme.of(context).colorScheme.surface,
              Theme.of(
                context,
              ).colorScheme.primaryContainer.withValues(alpha: 0.35),
            ],
          ),
        ),
        padding: const EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Text(icon, style: const TextStyle(fontSize: 32)),
                const SizedBox(width: 12),
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        title,
                        style: TextStyle(
                          fontSize: 18,
                          fontWeight: FontWeight.bold,
                          color: Theme.of(context).colorScheme.primary,
                        ),
                      ),
                      Text(
                        subtitle,
                        style: TextStyle(
                          fontSize: 14,
                          color: Theme.of(
                            context,
                          ).colorScheme.onPrimaryContainer,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
            const SizedBox(height: 12),
            Text(
              description,
              style: TextStyle(
                fontSize: 15,
                height: 1.4,
                color: Theme.of(context).colorScheme.onSurface,
              ),
            ),
          ],
        ),
      ),
    );
  }
}
