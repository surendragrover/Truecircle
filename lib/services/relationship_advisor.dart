import '../models/contact.dart';
import 'relationship_analyzer.dart';

/// AI-Powered Relationship Advisor
/// ‡§Ø‡§π service relationship analysis ‡§ï‡•á based ‡§™‡§∞ personalized advice ‡§¶‡•á‡§§‡•Ä ‡§π‡•à
/// Cultural context ‡§ï‡•á ‡§∏‡§æ‡§• Hindi ‡§î‡§∞ English ‡§Æ‡•á‡§Ç solutions provide ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à
class RelationshipAdvisor {
  /// Generate comprehensive relationship advice based on analysis
  RelationshipAdvice generateAdvice(RelationshipHealth health) {
    final contact = health.contact;
    final score = health.overallScore;

    return RelationshipAdvice(
      contact: contact,
      overallAssessment: _generateOverallAssessment(health),
      specificIssues: _identifySpecificIssues(health),
      actionPlan: _createActionPlan(health),
      conversationStarters: _generateConversationStarters(contact),
      culturalTips: _getCulturalTips(contact),
      timeBasedSuggestions: _getTimeBasedSuggestions(health),
      emergencyActions: score < 0.3 ? _getEmergencyActions(health) : [],
    );
  }

  /// üìã Overall Relationship Assessment
  RelationshipAssessment _generateOverallAssessment(RelationshipHealth health) {
    final score = health.overallScore;

    if (score >= 0.8) {
      return RelationshipAssessment(
        status: RelationshipStatus.thriving,
        titleEn: "Thriving Relationship",
        titleHi: "‡§´‡§≤‡§§‡§æ-‡§´‡•Ç‡§≤‡§§‡§æ ‡§∞‡§ø‡§∂‡•ç‡§§‡§æ",
        descriptionEn:
            "Your relationship with ${health.contact.displayName} is strong and healthy. Keep nurturing this connection!",
        descriptionHi:
            "${health.contact.displayName} ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ü‡§™‡§ï‡§æ ‡§∞‡§ø‡§∂‡•ç‡§§‡§æ ‡§Æ‡§ú‡§¨‡•Ç‡§§ ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡•§ ‡§á‡§∏ ‡§ú‡•Å‡§°‡§º‡§æ‡§µ ‡§ï‡•ã ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§§‡•á ‡§∞‡§π‡•á‡§Ç!",
        emoji: "üíö",
        confidenceLevel: 0.9,
      );
    } else if (score >= 0.6) {
      return RelationshipAssessment(
        status: RelationshipStatus.stable,
        titleEn: "Stable Connection",
        titleHi: "‡§∏‡•ç‡§•‡§ø‡§∞ ‡§ú‡•Å‡§°‡§º‡§æ‡§µ",
        descriptionEn:
            "Good foundation, but there's room for improvement in your relationship.",
        descriptionHi: "‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§®‡•Ä‡§Ç‡§µ ‡§π‡•à, ‡§≤‡•á‡§ï‡§ø‡§® ‡§∞‡§ø‡§∂‡•ç‡§§‡•á ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡•Ä ‡§ó‡•Å‡§Ç‡§ú‡§æ‡§á‡§∂ ‡§π‡•à‡•§",
        emoji: "üíõ",
        confidenceLevel: 0.8,
      );
    } else if (score >= 0.4) {
      return RelationshipAssessment(
        status: RelationshipStatus.needsAttention,
        titleEn: "Needs Attention",
        titleHi: "‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§®‡•á ‡§ï‡•Ä ‡§ú‡§∞‡•Ç‡§∞‡§§",
        descriptionEn:
            "Your relationship is showing signs of drift. Time to take action!",
        descriptionHi:
            "‡§Ü‡§™‡§ï‡§æ ‡§∞‡§ø‡§∂‡•ç‡§§‡§æ ‡§¶‡•Ç‡§∞ ‡§π‡•ã‡§®‡•á ‡§ï‡•á ‡§∏‡§Ç‡§ï‡•á‡§§ ‡§¶‡§ø‡§ñ‡§æ ‡§∞‡§π‡§æ ‡§π‡•à‡•§ ‡§ï‡§æ‡§∞‡•ç‡§∞‡§µ‡§æ‡§à ‡§ï‡§æ ‡§∏‡§Æ‡§Ø ‡§π‡•à!",
        emoji: "üß°",
        confidenceLevel: 0.7,
      );
    } else {
      return RelationshipAssessment(
        status: RelationshipStatus.atRisk,
        titleEn: "At Risk",
        titleHi: "‡§ñ‡§§‡§∞‡•á ‡§Æ‡•á‡§Ç",
        descriptionEn:
            "This relationship needs immediate care and attention to prevent further deterioration.",
        descriptionHi:
            "‡§á‡§∏ ‡§∞‡§ø‡§∂‡•ç‡§§‡•á ‡§ï‡•ã ‡§î‡§∞ ‡§¨‡§ø‡§ó‡§°‡§º‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§î‡§∞ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§ï‡•Ä ‡§ú‡§∞‡•Ç‡§∞‡§§ ‡§π‡•à‡•§",
        emoji: "‚ù§Ô∏è‚Äçü©π",
        confidenceLevel: 0.9,
      );
    }
  }

  /// üîç Identify Specific Issues
  List<RelationshipIssue> _identifySpecificIssues(RelationshipHealth health) {
    List<RelationshipIssue> issues = [];

    // Communication Frequency Issue
    if (health.frequencyHealth < 0.5) {
      issues.add(RelationshipIssue(
        type: IssueType.lowFrequency,
        severity: health.frequencyHealth < 0.3
            ? IssueSeverity.high
            : IssueSeverity.medium,
        titleEn: "Infrequent Communication",
        titleHi: "‡§ï‡§Æ ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§",
        descriptionEn:
            "You don't communicate as often as healthy relationships typically do.",
        descriptionHi:
            "‡§Ü‡§™ ‡§â‡§§‡§®‡•Ä ‡§¨‡§æ‡§∞ ‡§¨‡§æ‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡•á ‡§ú‡§ø‡§§‡§®‡•Ä ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§∞‡§ø‡§∂‡•ç‡§§‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§",
        solutionEn:
            "Try to increase contact frequency gradually. Aim for at least one meaningful interaction per week.",
        solutionHi:
            "‡§ß‡•Ä‡§∞‡•á-‡§ß‡•Ä‡§∞‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡•Ä ‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§Æ‡•á‡§Ç ‡§ï‡§Æ ‡§∏‡•á ‡§ï‡§Æ ‡§è‡§ï ‡§∏‡§æ‡§∞‡•ç‡§•‡§ï ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§ï‡§æ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø ‡§∞‡§ñ‡•á‡§Ç‡•§",
      ));
    }

    // Response Time Issue
    if (health.responseHealth < 0.5) {
      issues.add(RelationshipIssue(
        type: IssueType.slowResponse,
        severity: IssueSeverity.medium,
        titleEn: "Delayed Responses",
        titleHi: "‡§¶‡•á‡§∞ ‡§∏‡•á ‡§ú‡§µ‡§æ‡§¨",
        descriptionEn:
            "Either you or they take too long to respond to messages.",
        descriptionHi:
            "‡§Ø‡§æ ‡§§‡•ã ‡§Ü‡§™ ‡§Ø‡§æ ‡§µ‡•á ‡§∏‡§Ç‡§¶‡•á‡§∂‡•ã‡§Ç ‡§ï‡§æ ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§®‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§π‡•Å‡§§ ‡§∏‡§Æ‡§Ø ‡§≤‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§",
        solutionEn:
            "Set expectations about response times and try to respond more promptly yourself.",
        solutionHi:
            "‡§ú‡§µ‡§æ‡§¨ ‡§ï‡•á ‡§∏‡§Æ‡§Ø ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡•á‡§ï‡•ç‡§∑‡§æ‡§è‡§Ç ‡§§‡§Ø ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§ñ‡•Å‡§¶ ‡§≠‡•Ä ‡§ú‡§≤‡•ç‡§¶‡•Ä ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§",
      ));
    }

    // Mutuality Issue
    if (health.mutualityHealth < 0.4) {
      final contact = health.contact;
      final isOneWay = contact.mutualityScore < 0.3;

      issues.add(RelationshipIssue(
        type: IssueType.imbalancedInitiation,
        severity: IssueSeverity.high,
        titleEn: "One-sided Communication",
        titleHi: "‡§è‡§ï‡§§‡§∞‡§´‡§æ ‡§∏‡§Ç‡§µ‡§æ‡§¶",
        descriptionEn: isOneWay
            ? "You're initiating most conversations. They may not be as invested."
            : "The conversation initiation is heavily skewed to one side.",
        descriptionHi: isOneWay
            ? "‡§Ü‡§™ ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ‡§§‡§∞ ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§ ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‡§µ‡•á ‡§â‡§§‡§®‡•á invested ‡§® ‡§π‡•ã‡§Ç‡•§"
            : "‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§ï‡•Ä ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§è‡§ï ‡§§‡§∞‡§´ ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§ù‡•Å‡§ï‡•Ä ‡§π‡•Å‡§à ‡§π‡•à‡•§",
        solutionEn:
            "Give them space to reach out sometimes. Don't always be the first to message.",
        solutionHi:
            "‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä ‡§â‡§®‡•ç‡§π‡•á‡§Ç ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ú‡§ó‡§π ‡§¶‡•á‡§Ç‡•§ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§™‡§π‡§≤‡•á ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§® ‡§≠‡•á‡§ú‡•á‡§Ç‡•§",
      ));
    }

    return issues;
  }

  /// üìã Create Actionable Plan
  ActionPlan _createActionPlan(RelationshipHealth health) {
    List<ActionItem> immediateActions = [];
    List<ActionItem> weeklyActions = [];
    List<ActionItem> monthlyActions = [];

    final daysSinceContact = health.contact.daysSinceLastContact;

    // Immediate Actions (next 24-48 hours)
    if (daysSinceContact > 7) {
      immediateActions.add(ActionItem(
        titleEn: "Send a friendly check-in message",
        titleHi: "‡§è‡§ï ‡§¶‡•ã‡§∏‡•ç‡§§‡§æ‡§®‡§æ ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≠‡•á‡§ú‡•á‡§Ç",
        descriptionEn:
            "Break the silence with a casual 'How are you?' or share something interesting",
        descriptionHi:
            "‡§ï‡•à‡§ú‡•Å‡§Ö‡§≤ '‡§ï‡•à‡§∏‡•á ‡§π‡•ã?' ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ñ‡§æ‡§Æ‡•ã‡§∂‡•Ä ‡§§‡•ã‡§°‡§º‡•á‡§Ç ‡§Ø‡§æ ‡§ï‡•Å‡§õ ‡§¶‡§ø‡§≤‡§ö‡§∏‡•ç‡§™ ‡§∂‡•á‡§Ø‡§∞ ‡§ï‡§∞‡•á‡§Ç",
        priority: ActionPriority.high,
        estimatedTime: "2-5 minutes",
      ));
    }

    // Weekly Actions
    weeklyActions.add(ActionItem(
      titleEn: "Schedule regular check-ins",
      titleHi: "‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
      descriptionEn:
          "Set a weekly reminder to reach out, even if it's just a quick message",
      descriptionHi:
          "‡§∏‡§æ‡§™‡•ç‡§§‡§æ‡§π‡§ø‡§ï ‡§∞‡§ø‡§Æ‡§æ‡§á‡§Ç‡§°‡§∞ ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç, ‡§≠‡§≤‡•á ‡§π‡•Ä ‡§Ø‡§π ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§è‡§ï ‡§õ‡•ã‡§ü‡§æ ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§π‡•ã",
      priority: ActionPriority.medium,
      estimatedTime: "5-10 minutes",
    ));

    // Monthly Actions
    monthlyActions.add(ActionItem(
      titleEn: "Plan a deeper conversation",
      titleHi: "‡§ó‡§π‡§∞‡•Ä ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§ï‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç",
      descriptionEn:
          "Have a meaningful conversation about life, goals, or shared interests",
      descriptionHi:
          "‡§ú‡•Ä‡§µ‡§®, ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø‡•ã‡§Ç ‡§Ø‡§æ ‡§∏‡§æ‡§ù‡§æ ‡§∞‡•Å‡§ö‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§∏‡§æ‡§∞‡•ç‡§•‡§ï ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§ï‡§∞‡•á‡§Ç",
      priority: ActionPriority.medium,
      estimatedTime: "20-30 minutes",
    ));

    return ActionPlan(
      immediateActions: immediateActions,
      weeklyActions: weeklyActions,
      monthlyActions: monthlyActions,
      timeframe: "Next 30 days",
      successMetrics: [
        "Increased communication frequency",
        "More balanced conversation initiation",
        "Improved response times",
        "Deeper connection"
      ],
    );
  }

  /// üí¨ Generate Conversation Starters
  List<ConversationStarter> _generateConversationStarters(Contact contact) {
    return [
      ConversationStarter(
        category: "Casual Check-in",
        messageEn: "Hey! How have you been? It's been a while!",
        messageHi: "‡§Ö‡§∞‡•á! ‡§ï‡•à‡§∏‡•á ‡§π‡•ã? ‡§ï‡§æ‡§´‡•Ä ‡§¶‡§ø‡§® ‡§π‡•ã ‡§ó‡§è!",
        context: "Perfect for breaking long silences",
        tone: ConversationTone.friendly,
      ),
      ConversationStarter(
        category: "Shared Interest",
        messageEn: "Saw this and thought of you! [share something relevant]",
        messageHi: "‡§Ø‡§π ‡§¶‡•á‡§ñ‡§æ ‡§§‡•ã ‡§Ü‡§™‡§ï‡•Ä ‡§Ø‡§æ‡§¶ ‡§Ü‡§à! [‡§ï‡•Å‡§õ ‡§™‡•ç‡§∞‡§æ‡§∏‡§Ç‡§ó‡§ø‡§ï ‡§∂‡•á‡§Ø‡§∞ ‡§ï‡§∞‡•á‡§Ç]",
        context: "Great for showing you remember their interests",
        tone: ConversationTone.thoughtful,
      ),
      ConversationStarter(
        category: "Current Events",
        messageEn:
            "What do you think about [recent event]? Would love your perspective!",
        messageHi:
            "[‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§ò‡§ü‡§®‡§æ] ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§ï‡•ç‡§Ø‡§æ ‡§µ‡§ø‡§ö‡§æ‡§∞ ‡§π‡•à? ‡§Ü‡§™‡§ï‡§æ ‡§®‡§ú‡§∞‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡•Ç‡§Ç‡§ó‡§æ!",
        context: "Good for intellectual discussions",
        tone: ConversationTone.curious,
      ),
      ConversationStarter(
        category: "Memory Sharing",
        messageEn:
            "Remember when we [shared memory]? That was such a good time!",
        messageHi:
            "‡§Ø‡§æ‡§¶ ‡§π‡•à ‡§ú‡§¨ ‡§π‡§Æ‡§®‡•á [‡§∏‡§æ‡§ù‡§æ ‡§Ø‡§æ‡§¶‡•á‡§Ç] ‡§ï‡§ø‡§Ø‡§æ ‡§•‡§æ? ‡§µ‡§π ‡§ï‡§ø‡§§‡§®‡§æ ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§∏‡§Æ‡§Ø ‡§•‡§æ!",
        context: "Perfect for strengthening emotional bonds",
        tone: ConversationTone.nostalgic,
      ),
    ];
  }

  /// üåç Cultural Communication Tips
  List<CulturalTip> _getCulturalTips(Contact contact) {
    return [
      CulturalTip(
        category: "Hindi Communication",
        titleEn: "Use respectful language",
        titleHi: "‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§®‡§ú‡§®‡§ï ‡§≠‡§æ‡§∑‡§æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç",
        tipEn: "Address elders with 'Aap' and use respectful terms like 'ji'",
        tipHi: "‡§¨‡§°‡§º‡•ã‡§Ç ‡§ï‡•ã '‡§Ü‡§™' ‡§ï‡§π‡•á‡§Ç ‡§î‡§∞ '‡§ú‡•Ä' ‡§ú‡•à‡§∏‡•á ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§®‡§ú‡§®‡§ï ‡§∂‡§¨‡•ç‡§¶‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç",
      ),
      CulturalTip(
        category: "Indian Context",
        titleEn: "Remember festivals and occasions",
        titleHi: "‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞‡•ã‡§Ç ‡§î‡§∞ ‡§Ö‡§µ‡§∏‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§Ø‡§æ‡§¶ ‡§∞‡§ñ‡•á‡§Ç",
        tipEn:
            "Sending wishes on Diwali, Eid, Christmas shows you care about their culture",
        tipHi:
            "‡§¶‡§ø‡§µ‡§æ‡§≤‡•Ä, ‡§à‡§¶, ‡§ï‡•ç‡§∞‡§ø‡§∏‡§Æ‡§∏ ‡§™‡§∞ ‡§∂‡•Å‡§≠‡§ï‡§æ‡§Æ‡§®‡§æ‡§è‡§Ç ‡§≠‡•á‡§ú‡§®‡§æ ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à ‡§ï‡§ø ‡§Ü‡§™ ‡§â‡§®‡§ï‡•Ä ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø ‡§ï‡•Ä ‡§™‡§∞‡§µ‡§æ‡§π ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç",
      ),
      CulturalTip(
        category: "Family Importance",
        titleEn: "Ask about family",
        titleHi: "‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡•á‡§Ç",
        tipEn:
            "In Indian culture, asking about family shows genuine care and interest",
        tipHi:
            "‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡§®‡§æ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§î‡§∞ ‡§∞‡•Å‡§ö‡§ø ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à",
      ),
    ];
  }

  /// ‚è∞ Time-based Suggestions
  List<TimeSuggestion> _getTimeBasedSuggestions(RelationshipHealth health) {
    return [
      TimeSuggestion(
        timeType: TimeType.bestContactTime,
        suggestion:
            "Based on past interactions, they're most responsive in the evening",
        suggestionHi:
            "‡§™‡§ø‡§õ‡§≤‡•Ä ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞, ‡§µ‡•á ‡§∂‡§æ‡§Æ ‡§Æ‡•á‡§Ç ‡§∏‡§¨‡§∏‡•á ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ responsive ‡§π‡•à‡§Ç",
      ),
      TimeSuggestion(
        timeType: TimeType.frequencyRecommendation,
        suggestion: "Aim for 2-3 meaningful interactions per week",
        suggestionHi: "‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§Æ‡•á‡§Ç 2-3 ‡§∏‡§æ‡§∞‡•ç‡§•‡§ï ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§ï‡§æ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø ‡§∞‡§ñ‡•á‡§Ç",
      ),
    ];
  }

  /// üö® Emergency Actions for At-Risk Relationships
  List<EmergencyAction> _getEmergencyActions(RelationshipHealth health) {
    return [
      EmergencyAction(
        urgencyLevel: UrgencyLevel.high,
        titleEn: "Reach out immediately",
        titleHi: "‡§§‡•Å‡§∞‡§Ç‡§§ ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç",
        actionEn:
            "Send a heartfelt message acknowledging the distance and expressing your desire to reconnect",
        actionHi:
            "‡§¶‡•Ç‡§∞‡•Ä ‡§ï‡•ã ‡§∏‡•ç‡§µ‡•Ä‡§ï‡§æ‡§∞ ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡§®‡•á ‡§ï‡•Ä ‡§á‡§ö‡•ç‡§õ‡§æ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§¶‡§ø‡§≤ ‡§∏‡•á ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≠‡•á‡§ú‡•á‡§Ç",
        template:
            "Hi [Name], I realize we haven't been in touch lately and I miss our conversations. I'd love to catch up - are you free for a quick call this week?",
        templateHi:
            "‡§π‡§æ‡§à [‡§®‡§æ‡§Æ], ‡§Æ‡•Å‡§ù‡•á ‡§è‡§π‡§∏‡§æ‡§∏ ‡§π‡•à ‡§ï‡§ø ‡§π‡§Æ ‡§π‡§æ‡§≤ ‡§π‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§∞‡§π‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§Æ‡•Å‡§ù‡•á ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§ï‡•Ä ‡§Ø‡§æ‡§¶ ‡§Ü‡§§‡•Ä ‡§π‡•à‡•§ ‡§Æ‡•à‡§Ç catch up ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡•Ç‡§Ç‡§ó‡§æ - ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§á‡§∏ ‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§è‡§ï ‡§õ‡•ã‡§ü‡•Ä ‡§ï‡•â‡§≤ ‡§ï‡•á ‡§≤‡§ø‡§è free ‡§π‡•à‡§Ç?",
      ),
    ];
  }
}

// Supporting Data Classes

class RelationshipAdvice {
  final Contact contact;
  final RelationshipAssessment overallAssessment;
  final List<RelationshipIssue> specificIssues;
  final ActionPlan actionPlan;
  final List<ConversationStarter> conversationStarters;
  final List<CulturalTip> culturalTips;
  final List<TimeSuggestion> timeBasedSuggestions;
  final List<EmergencyAction> emergencyActions;

  RelationshipAdvice({
    required this.contact,
    required this.overallAssessment,
    required this.specificIssues,
    required this.actionPlan,
    required this.conversationStarters,
    required this.culturalTips,
    required this.timeBasedSuggestions,
    required this.emergencyActions,
  });
}

class RelationshipAssessment {
  final RelationshipStatus status;
  final String titleEn;
  final String titleHi;
  final String descriptionEn;
  final String descriptionHi;
  final String emoji;
  final double confidenceLevel;

  RelationshipAssessment({
    required this.status,
    required this.titleEn,
    required this.titleHi,
    required this.descriptionEn,
    required this.descriptionHi,
    required this.emoji,
    required this.confidenceLevel,
  });
}

enum RelationshipStatus { thriving, stable, needsAttention, atRisk }

class RelationshipIssue {
  final IssueType type;
  final IssueSeverity severity;
  final String titleEn;
  final String titleHi;
  final String descriptionEn;
  final String descriptionHi;
  final String solutionEn;
  final String solutionHi;

  RelationshipIssue({
    required this.type,
    required this.severity,
    required this.titleEn,
    required this.titleHi,
    required this.descriptionEn,
    required this.descriptionHi,
    required this.solutionEn,
    required this.solutionHi,
  });
}

enum IssueType {
  lowFrequency,
  slowResponse,
  imbalancedInitiation,
  decliningSentiment
}

enum IssueSeverity { low, medium, high, critical }

class ActionPlan {
  final List<ActionItem> immediateActions;
  final List<ActionItem> weeklyActions;
  final List<ActionItem> monthlyActions;
  final String timeframe;
  final List<String> successMetrics;

  ActionPlan({
    required this.immediateActions,
    required this.weeklyActions,
    required this.monthlyActions,
    required this.timeframe,
    required this.successMetrics,
  });
}

class ActionItem {
  final String titleEn;
  final String titleHi;
  final String descriptionEn;
  final String descriptionHi;
  final ActionPriority priority;
  final String estimatedTime;

  ActionItem({
    required this.titleEn,
    required this.titleHi,
    required this.descriptionEn,
    required this.descriptionHi,
    required this.priority,
    required this.estimatedTime,
  });
}

enum ActionPriority { low, medium, high, urgent }

class ConversationStarter {
  final String category;
  final String messageEn;
  final String messageHi;
  final String context;
  final ConversationTone tone;

  ConversationStarter({
    required this.category,
    required this.messageEn,
    required this.messageHi,
    required this.context,
    required this.tone,
  });
}

enum ConversationTone { friendly, formal, thoughtful, curious, nostalgic }

class CulturalTip {
  final String category;
  final String titleEn;
  final String titleHi;
  final String tipEn;
  final String tipHi;

  CulturalTip({
    required this.category,
    required this.titleEn,
    required this.titleHi,
    required this.tipEn,
    required this.tipHi,
  });
}

class TimeSuggestion {
  final TimeType timeType;
  final String suggestion;
  final String suggestionHi;

  TimeSuggestion({
    required this.timeType,
    required this.suggestion,
    required this.suggestionHi,
  });
}

enum TimeType { bestContactTime, frequencyRecommendation, seasonalSuggestion }

class EmergencyAction {
  final UrgencyLevel urgencyLevel;
  final String titleEn;
  final String titleHi;
  final String actionEn;
  final String actionHi;
  final String template;
  final String templateHi;

  EmergencyAction({
    required this.urgencyLevel,
    required this.titleEn,
    required this.titleHi,
    required this.actionEn,
    required this.actionHi,
    required this.template,
    required this.templateHi,
  });
}

enum UrgencyLevel { medium, high, critical }
