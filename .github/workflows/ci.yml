name: CI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  analyze:
    name: 📊 Code Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔍 Analyze code
        run: flutter analyze

      - name: ✅ Check formatting
        run: dart format --set-exit-if-changed .

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🏗️ Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: 🧪 Run unit tests
        run: flutter test --coverage

      - name: 📊 Upload coverage
        uses: codecov/codecov-action@v3
        if: success()
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: truecircle-coverage

  build-android:
    name: 🤖 Build Android APK
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [analyze, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🏗️ Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: 🤖 Build APK
        run: flutter build apk --debug

      - name: 📤 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7

  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [analyze, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🏗️ Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: 🌐 Build Web
        run: flutter build web --release

      - name: 📤 Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          retention-days: 7

  security:
    name: 🔒 Security Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔒 Run demo token guard
        run: dart run tool/demo_token_guard.dart

      - name: 🔐 Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  summary:
    name: 📋 CI Summary
    runs-on: ubuntu-latest
    needs: [analyze, test, build-android, build-web, security]
    if: always()
    steps:
      - name: 📊 Generate Summary
        run: |
          echo "## 🎉 CI Pipeline Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Job Status:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Code Analysis: ${{ needs.analyze.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Android Build: ${{ needs.build-android.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Web Build: ${{ needs.build-web.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Security Checks: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Thank you for your contribution! 🙏**" >> $GITHUB_STEP_SUMMARY
